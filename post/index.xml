<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on edermi's Blog</title><link>https://edermi.github.io/post/</link><description>Recent content in Posts on edermi's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>spam-blog@michael-eder.net (Michael Eder)</managingEditor><webMaster>spam-blog@michael-eder.net (Michael Eder)</webMaster><lastBuildDate>Sun, 06 May 2018 00:00:00 +0000</lastBuildDate><atom:link href="https://edermi.github.io/post/index.xml" rel="self" type="application/rss+xml"/><item><title>Passing the hash with native RDP client (mstsc.exe)</title><link>https://edermi.github.io/post/2018/native_rdp_pass_the_hash/</link><pubDate>Sun, 06 May 2018 00:00:00 +0000</pubDate><author>spam-blog@michael-eder.net (Michael Eder)</author><guid>https://edermi.github.io/post/2018/native_rdp_pass_the_hash/</guid><description>TL;DR: If the remote server allows Restricted Admin login, it is possible to login via RDP by passing the hash using the native Windows RDP client mstsc.exe. (You'll need mimikatz or something else to inject the hash into the process)
On engagements it is usually only a matter of time to get your hands on NTLM hashes. These can usually be directly used to authenticate against other services / machines and enable lateral movement.</description></item><item><title>Präsentationen mit Markdown (oder was auch immer)</title><link>https://edermi.github.io/post/2017/praesentieren_mit_markdown/</link><pubDate>Fri, 03 Feb 2017 00:00:00 +0000</pubDate><author>spam-blog@michael-eder.net (Michael Eder)</author><guid>https://edermi.github.io/post/2017/praesentieren_mit_markdown/</guid><description>Mir ist zwar das Tool pandoc als universeller Dokumentconverter schon länger ein Begriff, aber ich bin erst vor kurzem wieder darauf aufmerksam geworden, und zwar um damit Präsentationen in Markdown (oder reStructuredText, Docbook, whatever) zu erstellen und diese dann zu LaTeX Beamer Präsentationen zu konvertieren. Es werden aber auch andere Formate unterstützt, zum Beispiel HTML5 Präsentationen mit reveal.js oder anderen Frameworks.
Folgende Markdown-Datei lässt sich mittels pandoc direkt in eine Beamer-Präsentation konvertieren:</description></item><item><title>Werbeblocker via unbound</title><link>https://edermi.github.io/post/2016/werbeblocker-via-unbound/</link><pubDate>Tue, 01 Mar 2016 00:00:00 +0000</pubDate><author>spam-blog@michael-eder.net (Michael Eder)</author><guid>https://edermi.github.io/post/2016/werbeblocker-via-unbound/</guid><description>Ich betreibe seit längerem auf einem ansonsten ungenutzten Raspberry Pi meinen eigenen DNS-Resolver. Auf dem Raspberry Pi läuft dabei Arch Linux und unbound als DNS Resolver. Natürlich könnte man auch einen anderen Resolver, bspw. von Google oder dem Telco nehmen, aber auf der einen Seite läuft man dann Gefahr, dass alle DNS-Anfragen getrackt werden, Antworten manipuliert werden oder man sogar auf unerwünschte Werbeseiten umgeleitet wird (die Telekom hat das mal gemacht und macht es schätzungsweise immer noch).</description></item><item><title>zsh: letzten Befehl als root ausführen</title><link>https://edermi.github.io/post/2015/zsh-letzten-befehl-als-root/</link><pubDate>Tue, 29 Sep 2015 00:00:00 +0000</pubDate><author>spam-blog@michael-eder.net (Michael Eder)</author><guid>https://edermi.github.io/post/2015/zsh-letzten-befehl-als-root/</guid><description>Klassiker im Alltag eines Terminal-Nutzers: Das sudo vergessen. Viele gehen dann in der History zurück, scrollen von Hand an den anfang und tippen halt sudo noch davor hin. Etwas bequemer ist da schon sudo !!, wobei mir das auch noch zu viel Schreibarbeit ist. Inspiriert von einem askubuntu-Thread habe ich mir den pls-Befehl definiert. Dazu einfach folgendes ans Ende der ~/.zshrc schreiben:
alias pls=&amp;#39;sudo $(fc -ln -1)&amp;#39; Anschließend führt pls den letzten Befehl nochmal mit einem sudo vorne dran aus:</description></item><item><title>Windows 10 Installationsimage unter Linux auf USB Stick installieren</title><link>https://edermi.github.io/post/2015/windows-10-auf-usb-unter-linux/</link><pubDate>Mon, 25 May 2015 00:00:00 +0000</pubDate><author>spam-blog@michael-eder.net (Michael Eder)</author><guid>https://edermi.github.io/post/2015/windows-10-auf-usb-unter-linux/</guid><description>Ich wollte mir mal Windows 10 außerhalb einer virtuellen Umgebung anschauen - mein Laptop hat leider kein DVD-Laufwerk, weswegen ich die Installation vom USB-Stick durchführen muss. Prinzipiell ist das meiner Meinung nach sowieso immer der way-to-go, da man den Stick wiederverwenden kann und alles sowieso schneller geht als von der DVD. Bei iso-Dateien von Linux-Distributionen hat bisher immer ein dd gereicht um die Images bootbar auf den USB-Stick zu verfrachten. Wie sich heraus stellt ist das bei Windows etwas mehr Arbeit, weswegen ich diesen Post schreibe falls andere ähnliche Probleme haben.</description></item><item><title>Accountspezifische Email-Adressen mit E-Mail subaddressing</title><link>https://edermi.github.io/post/2014/email-subaddressing/</link><pubDate>Wed, 17 Sep 2014 00:00:00 +0000</pubDate><author>spam-blog@michael-eder.net (Michael Eder)</author><guid>https://edermi.github.io/post/2014/email-subaddressing/</guid><description>Bisher habe ich für alle Seiten, bei denen ich mich registriert habe, eine eigene E-Mail Adresse mit Weiterleitung auf ein Sammelpostfach angelegt. Das hat den Vorteil, dass man Emails relativ leicht sortieren kann, man sofort sieht wo der Spam her kommt und man sich einer solchen Adresse auch wieder relativ schnell entledigen kann. Das Anlegen einer neuen E-Mail Adresse ist in meinem Fall auch nicht viel mehr als einmal per SSH einloggen, Name und Passwort für die Adresse ausdenken und Weiterleitung einrichten.</description></item></channel></rss>